name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, "[0-9]+-[0-9]+-*"]
  workflow_run:
    workflows: ["Build for Dependabot"]
    types:
      - completed
  workflow_dispatch:

jobs:
  build:
    name: Build
    if: |-
      ${{
        (github.event_name == 'push' && github.actor != 'dependabot[bot]') ||
        (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') ||
        (github.event_name == 'workflow_run' && github.actor == 'dependabot[bot]')
      }}
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Start check run
        id: start-check-run
        env:
          GH_TOKEN: ${{ github.token }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha || github.event.workflow_run.head_sha }}
        run: |
          echo "::notice::Repo/owner is $GITHUB_REPOSITORY"
          echo "::notice::SHA is $HEAD_SHA"
          echo "::notice::Run id is $GITHUB_RUN_ID"
          CHECK_SUITE_ID=$(gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID \
            -q .check_suite_id)
          echo "::notice::Check suite id is $CHECK_SUITE_ID"
          EXTERNAL_ID=$(gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/$GITHUB_REPOSITORY/check-suites/$CHECK_SUITE_ID/check-runs \
            -q .check_runs[0].external_id)
          echo "::notice::External id is $EXTERNAL_ID"
          CHECK_RUN_ID=$(gh api \
            -H "Accept: application/vnd.github+json" \
            "/repos/$GITHUB_REPOSITORY/check-runs" \
            -q .id \
            --input - <<< '{ "name": "Build / Build for Dependabot", "head_sha": "'"$HEAD_SHA"'", "external_id": "'"$EXTERNAL_ID"'", "status": "in_progress" }')
          echo "::notice::Check run ID is $CHECK_RUN_ID"
          echo "::set-output name=check-run-id::$CHECK_RUN_ID"

      - uses: actions/checkout@v3
        if: ${{ github.event_name != 'workflow_run' }}

      - uses: actions/checkout@v3
        if: ${{ github.event_name == 'workflow_run' }}
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          check-latest: true

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Package
        run: yarn package

      - uses: CatChen/check-git-status-action@v1
        id: check-git-status
        with:
          fail-if-not-clean: ${{ github.actor != 'dependabot[bot]' }}
          push-if-not-clean: true
          github-token: ${{ secrets.CHECK_GIT_STATUS_ACTION_TOKEN }}

      - name: End check run
        if: ${{ always() && steps.start-check-run.outputs.run-id != '' }}
        env:
          GH_TOKEN: ${{ github.token }}
          CHECK_RUN_ID: ${{ steps.start-check-run.outputs.check-run-id }}
          CONCLUSION: ${{ steps.check-git-status.conclusion }}
        run: |
          gh api \
            -H "Accept: application/vnd.github+json" \
            -X "PATCH" \
            "/repos/$GITHUB_REPOSITORY/check-runs/$CHECK_RUN_ID" \
            -f status="completed" \
            -f conclusion="$CONCLUSION"
